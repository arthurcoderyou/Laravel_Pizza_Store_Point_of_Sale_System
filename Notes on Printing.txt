Install Dompdf using Composer if you haven't done so already:

composer require dompdf/dompdf


Create a route in your Laravel routes file (web.php) to handle the PDF generation:

use Dompdf\Dompdf;

Route::get('/generate-pdf', function () {
    // Create a new Dompdf instance
    $dompdf = new Dompdf();
    
    // Load the HTML content from the Blade view
    $html = view('your-blade-view')->render();
    
    // Load the HTML into Dompdf
    $dompdf->loadHtml($html);
    
    // (Optional) Adjust Dompdf configuration settings
    $dompdf->setPaper('A4', 'portrait');
    
    // Render the HTML to PDF
    $dompdf->render();
    
    // Generate a unique filename for the PDF
    $filename = 'output_' . uniqid() . '.pdf';
    
    // Save the PDF to the public directory
    $dompdf->stream($filename, ['Attachment' => false]);
    
    // Return the filename for further processing, if needed
    return $filename;
});




To generate and download a PDF when a button is clicked in Laravel, you can modify the previous example by incorporating a button click event. Here's an updated version:

Install Dompdf using Composer if you haven't done so already:
bash
Copy code
composer require dompdf/dompdf
Create a route in your Laravel routes file (web.php) to handle the PDF generation:
php
Copy code
use Dompdf\Dompdf;

Route::get('/generate-pdf', function () {
    // Create a new Dompdf instance
    $dompdf = new Dompdf();
    
    // Load the HTML content from the Blade view
    $html = view('your-blade-view')->render();
    
    // Load the HTML into Dompdf
    $dompdf->loadHtml($html);
    
    // (Optional) Adjust Dompdf configuration settings
    $dompdf->setPaper('A4', 'portrait');
    
    // Render the HTML to PDF
    $dompdf->render();
    
    // Generate a unique filename for the PDF
    $filename = 'output_' . uniqid() . '.pdf';
    
    // Save the PDF to the public directory
    $dompdf->stream($filename, ['Attachment' => false]);
    
    // Return the filename for further processing, if needed
    return $filename;
});




In your Laravel Blade view file, add a button that triggers the PDF generation:


<!-- Example button to generate PDF -->
<button id="generatePdfButton">Generate PDF</button>



Add JavaScript code to handle the button click event and initiate the PDF generation:

<script>
    // Get the generate PDF button element
    const generatePdfButton = document.getElementById('generatePdfButton');

    // Attach a click event listener to the button
    generatePdfButton.addEventListener('click', () => {
        // Redirect to the PDF generation route
        window.location.href = '/generate-pdf';
    });
</script>



Open the php.ini file in a text editor.

Uncomment the line that starts with extension=gd. To uncomment a line, remove the semicolon (;) at the beginning of the line.


then restart everything

apache control xampp panel

php artisan serve 

npm run dev

php artisan route:clear
php artisan view:clear
php artisan optimize